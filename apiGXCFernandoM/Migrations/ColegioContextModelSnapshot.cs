// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using apiGXCFernandoM.Context;

#nullable disable

namespace apiGXCFernandoM.Migrations
{
    [DbContext(typeof(ColegioContext))]
    partial class ColegioContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("apiGXCFernandoM.Models.Calificaciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("calificacion")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("idColegio")
                        .HasColumnType("int");

                    b.Property<int>("idMateria")
                        .HasColumnType("int");

                    b.Property<int>("idUsuario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("idColegio");

                    b.HasIndex("idMateria");

                    b.HasIndex("idUsuario");

                    b.ToTable("Calificacion", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            calificacion = 5m,
                            idColegio = 1,
                            idMateria = 1,
                            idUsuario = 1
                        });
                });

            modelBuilder.Entity("apiGXCFernandoM.Models.Colegio", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("nombre")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("tipoColegio")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.HasKey("id");

                    b.ToTable("Colegio", (string)null);

                    b.HasData(
                        new
                        {
                            id = 1,
                            nombre = "Nombre de Prueba",
                            tipoColegio = "Privado"
                        });
                });

            modelBuilder.Entity("apiGXCFernandoM.Models.Materia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("area")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("curso")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("docenteAsignado")
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)");

                    b.Property<int?>("idColegio")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<int?>("numeroEstudiantes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("paralelo")
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)");

                    b.HasKey("Id");

                    b.HasIndex("idColegio");

                    b.ToTable("Materia", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            area = "Area Prueba",
                            curso = "Primero",
                            docenteAsignado = "Docente Prueba",
                            idColegio = 1,
                            nombre = "Nombre Prueba",
                            numeroEstudiantes = 10,
                            paralelo = "A"
                        });
                });

            modelBuilder.Entity("apiGXCFernandoM.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("correoElectronico")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("nombreCompleto")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("password")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("rol")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.Property<string>("username")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.HasKey("Id");

                    b.ToTable("Usuario", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            correoElectronico = "fer@fer.com",
                            nombreCompleto = "Usuario Prueba",
                            password = "admin",
                            rol = "admin",
                            username = "Fer"
                        },
                        new
                        {
                            Id = 2,
                            correoElectronico = "john@fer.com",
                            nombreCompleto = "John Doe",
                            password = "john",
                            rol = "seller",
                            username = "John"
                        });
                });

            modelBuilder.Entity("apiGXCFernandoM.Models.Calificaciones", b =>
                {
                    b.HasOne("apiGXCFernandoM.Models.Colegio", "Colegio")
                        .WithMany("Calificaciones")
                        .HasForeignKey("idColegio")
                        .IsRequired();

                    b.HasOne("apiGXCFernandoM.Models.Materia", "Materia")
                        .WithMany("Calificaciones")
                        .HasForeignKey("idMateria")
                        .IsRequired();

                    b.HasOne("apiGXCFernandoM.Models.Usuario", "Usuario")
                        .WithMany("Calificaciones")
                        .HasForeignKey("idUsuario")
                        .IsRequired();

                    b.Navigation("Colegio");

                    b.Navigation("Materia");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("apiGXCFernandoM.Models.Materia", b =>
                {
                    b.HasOne("apiGXCFernandoM.Models.Colegio", "Colegio")
                        .WithMany("Materias")
                        .HasForeignKey("idColegio");

                    b.Navigation("Colegio");
                });

            modelBuilder.Entity("apiGXCFernandoM.Models.Colegio", b =>
                {
                    b.Navigation("Calificaciones");

                    b.Navigation("Materias");
                });

            modelBuilder.Entity("apiGXCFernandoM.Models.Materia", b =>
                {
                    b.Navigation("Calificaciones");
                });

            modelBuilder.Entity("apiGXCFernandoM.Models.Usuario", b =>
                {
                    b.Navigation("Calificaciones");
                });
#pragma warning restore 612, 618
        }
    }
}
